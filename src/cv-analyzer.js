import { AIService } from './ai-service.js';

export class CVAnalyzer {
    constructor() {
        this.aiService = new AIService();
        
        // Mots-cl√©s professionnels fran√ßais
        this.professionalKeywords = [
            'gestion', 'management', '√©quipe', 'projet', 'd√©veloppement', 'am√©lioration',
            'optimisation', 'analyse', 'strat√©gie', 'innovation', 'collaboration',
            'leadership', 'communication', 'organisation', 'planification', 'coordination',
            'supervision', 'encadrement', 'formation', 'conseil', 'expertise'
        ];
        
        // Mots-cl√©s techniques modernes
        this.technicalKeywords = [
            'javascript', 'typescript', 'python', 'java', 'react', 'angular', 'vue',
            'node.js', 'express', 'sql', 'mongodb', 'postgresql', 'mysql', 'redis',
            'aws', 'azure', 'gcp', 'docker', 'kubernetes', 'git', 'gitlab', 'github',
            'agile', 'scrum', 'devops', 'ci/cd', 'jenkins', 'api', 'rest', 'graphql',
            'microservices', 'cloud', 'serverless', 'terraform', 'ansible'
        ];

        // Secteurs d'activit√©
        this.sectorKeywords = {
            'tech': ['d√©veloppement', 'programmation', 'software', 'digital', 'it', 'informatique'],
            'marketing': ['marketing', 'communication', 'digital', 'seo', 'sem', 'social media'],
            'finance': ['finance', 'comptabilit√©', 'audit', 'contr√¥le de gestion', 'budget'],
            'rh': ['ressources humaines', 'recrutement', 'formation', 'paie', 'social'],
            'commercial': ['vente', 'commercial', 'business development', 'n√©gociation', 'client']
        };
    }

    async analyzeCV(file, jobDescription = '') {
        try {
            console.log('üîç D√©but de l\'analyse du CV...');
            const cvText = await this.extractTextFromFile(file);
            console.log('üìÑ Texte extrait du CV:', cvText.substring(0, 200) + '...');
            
            // Utiliser l'IA am√©lior√©e pour l'analyse
            const analysis = await this.aiService.analyzeCV(cvText, jobDescription);
            
            // Enrichir avec des donn√©es locales sp√©cifiques
            return this.enrichAnalysisWithLocalInsights(analysis, cvText, jobDescription, file);
            
        } catch (error) {
            console.error('‚ùå Erreur lors de l\'analyse:', error);
            throw new Error(`Erreur lors de l'analyse du CV: ${error.message}`);
        }
    }

    async extractTextFromFile(file) {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            
            reader.onload = (e) => {
                try {
                    let text = '';
                    
                    if (file.type === 'text/plain') {
                        text = e.target.result;
                    } else if (file.type === 'application/pdf') {
                        // Simulation d'extraction PDF - dans un vrai projet, utiliser PDF.js
                        text = `CV PDF de ${file.name}. 
                        
                        PROFIL PROFESSIONNEL
                        D√©veloppeur Full Stack avec 5 ans d'exp√©rience dans le d√©veloppement d'applications web modernes. 
                        Sp√©cialis√© en JavaScript, React, Node.js et bases de donn√©es SQL/NoSQL.
                        
                        EXP√âRIENCE PROFESSIONNELLE
                        
                        D√©veloppeur Senior - TechCorp (2021-2024)
                        ‚Ä¢ D√©veloppement d'applications React avec TypeScript
                        ‚Ä¢ Gestion d'√©quipe de 3 d√©veloppeurs junior
                        ‚Ä¢ Am√©lioration des performances de 40%
                        ‚Ä¢ Migration vers architecture microservices
                        
                        D√©veloppeur Full Stack - StartupXYZ (2019-2021)
                        ‚Ä¢ Cr√©ation d'API REST avec Node.js et Express
                        ‚Ä¢ Int√©gration de bases de donn√©es MongoDB
                        ‚Ä¢ D√©veloppement frontend avec React et Redux
                        ‚Ä¢ Mise en place de tests automatis√©s
                        
                        FORMATION
                        Master Informatique - Universit√© Paris Diderot (2019)
                        Licence Informatique - Universit√© Paris Diderot (2017)
                        
                        COMP√âTENCES TECHNIQUES
                        ‚Ä¢ Langages: JavaScript, TypeScript, Python, Java
                        ‚Ä¢ Frontend: React, Angular, Vue.js, HTML5, CSS3
                        ‚Ä¢ Backend: Node.js, Express, Django, Spring Boot
                        ‚Ä¢ Bases de donn√©es: MongoDB, PostgreSQL, MySQL, Redis
                        ‚Ä¢ Cloud: AWS, Docker, Kubernetes
                        ‚Ä¢ Outils: Git, Jenkins, Jira, Confluence
                        
                        COMP√âTENCES INTERPERSONNELLES
                        ‚Ä¢ Leadership et management d'√©quipe
                        ‚Ä¢ Communication et pr√©sentation
                        ‚Ä¢ R√©solution de probl√®mes complexes
                        ‚Ä¢ Adaptabilit√© et apprentissage continu
                        
                        LANGUES
                        ‚Ä¢ Fran√ßais (natif)
                        ‚Ä¢ Anglais (courant - TOEIC 850)
                        ‚Ä¢ Espagnol (interm√©diaire)
                        
                        CONTACT
                        Email: john.doe@email.com
                        T√©l√©phone: +33 6 12 34 56 78
                        LinkedIn: linkedin.com/in/johndoe
                        Adresse: Paris, France`;
                    } else if (file.type.includes('word') || file.name.endsWith('.docx') || file.name.endsWith('.doc')) {
                        // Simulation d'extraction Word
                        text = `CV Word de ${file.name}.
                        
                        Marie Dupont
                        Chef de Projet Marketing Digital
                        
                        CONTACT
                        Email: marie.dupont@email.com
                        T√©l√©phone: 01 23 45 67 89
                        LinkedIn: linkedin.com/in/mariedupont
                        Adresse: Lyon, France
                        
                        PROFIL PROFESSIONNEL
                        Chef de projet marketing digital avec 7 ans d'exp√©rience dans la gestion de campagnes multi-canaux. 
                        Expertise en SEO/SEA, social media marketing et analyse de performance. 
                        Passionn√©e par l'innovation digitale et la transformation des entreprises.
                        
                        EXP√âRIENCE PROFESSIONNELLE
                        
                        Chef de Projet Marketing Digital - AgenceWeb (2020-2024)
                        ‚Ä¢ Gestion de portefeuille clients (15 comptes, CA 2M‚Ç¨)
                        ‚Ä¢ Augmentation du trafic organique de 150% en moyenne
                        ‚Ä¢ Management d'√©quipe de 5 personnes
                        ‚Ä¢ Mise en place de strat√©gies omnicanales
                        ‚Ä¢ ROI moyen des campagnes: +85%
                        
                        Responsable Marketing Digital - E-commerce Plus (2018-2020)
                        ‚Ä¢ D√©veloppement de la strat√©gie digitale
                        ‚Ä¢ Gestion budget marketing 500k‚Ç¨/an
                        ‚Ä¢ Croissance du CA en ligne de 200%
                        ‚Ä¢ Optimisation du tunnel de conversion (+45%)
                        
                        Charg√©e de Marketing Digital - StartupMode (2017-2018)
                        ‚Ä¢ Cr√©ation et gestion des campagnes Google Ads
                        ‚Ä¢ Community management (Instagram, Facebook)
                        ‚Ä¢ Analyse des performances et reporting
                        ‚Ä¢ Collaboration avec les √©quipes cr√©atives
                        
                        FORMATION
                        Master Marketing Digital - ESCP Business School (2017)
                        Licence Communication - Universit√© Lyon 2 (2015)
                        
                        CERTIFICATIONS
                        ‚Ä¢ Google Ads (Search, Display, Shopping)
                        ‚Ä¢ Google Analytics 4
                        ‚Ä¢ Facebook Blueprint
                        ‚Ä¢ HubSpot Content Marketing
                        
                        COMP√âTENCES TECHNIQUES
                        ‚Ä¢ SEO/SEA: Google Ads, Bing Ads, SEMrush, Ahrefs
                        ‚Ä¢ Analytics: Google Analytics, Adobe Analytics, Hotjar
                        ‚Ä¢ Social Media: Facebook Ads, Instagram, LinkedIn Ads
                        ‚Ä¢ Email Marketing: Mailchimp, Sendinblue, Klaviyo
                        ‚Ä¢ CMS: WordPress, Shopify, Magento
                        ‚Ä¢ Design: Photoshop, Canva, Figma (bases)
                        
                        COMP√âTENCES INTERPERSONNELLES
                        ‚Ä¢ Leadership et management d'√©quipe
                        ‚Ä¢ N√©gociation et relation client
                        ‚Ä¢ Cr√©ativit√© et innovation
                        ‚Ä¢ Analyse et esprit critique
                        ‚Ä¢ Gestion de projet et organisation
                        
                        LANGUES
                        ‚Ä¢ Fran√ßais (natif)
                        ‚Ä¢ Anglais (courant - Cambridge C1)
                        ‚Ä¢ Italien (interm√©diaire)`;
                    } else {
                        // Fallback pour autres types de fichiers
                        text = `Contenu simul√© pour ${file.name}. 
                        
                        CV de candidat avec exp√©rience professionnelle vari√©e.
                        Comp√©tences en gestion de projet, communication et leadership.
                        Formation sup√©rieure et certifications professionnelles.
                        Ma√Ætrise de plusieurs langues et outils informatiques.
                        Exp√©rience en management d'√©quipe et d√©veloppement commercial.`;
                    }
                    
                    resolve(text);
                } catch (error) {
                    reject(new Error(`Erreur lors de l'extraction du texte: ${error.message}`));
                }
            };
            
            reader.onerror = () => reject(new Error('Erreur lors de la lecture du fichier'));
            
            if (file.type === 'text/plain') {
                reader.readAsText(file, 'UTF-8');
            } else {
                reader.readAsArrayBuffer(file);
            }
        });
    }

    enrichAnalysisWithLocalInsights(analysis, cvText, jobDescription, file) {
        // Ajouter des insights sp√©cifiques au contexte fran√ßais
        const enrichedAnalysis = {
            ...analysis,
            fileInfo: {
                name: file.name,
                size: file.size,
                type: file.type,
                wordCount: cvText.split(/\s+/).length
            },
            localInsights: this.generateLocalInsights(cvText, jobDescription),
            sectorAnalysis: this.analyzeSector(cvText),
            frenchSpecificTips: this.getFrenchSpecificTips(cvText)
        };

        // Ajuster les recommandations pour le march√© fran√ßais
        enrichedAnalysis.recommendations = this.adaptRecommendationsForFrance(
            enrichedAnalysis.recommendations, 
            cvText
        );

        return enrichedAnalysis;
    }

    generateLocalInsights(cvText, jobDescription) {
        const insights = {
            keywordDensity: this.calculateKeywordDensity(cvText),
            readabilityScore: this.calculateReadabilityScore(cvText),
            professionalLevel: this.assessProfessionalLevel(cvText),
            geographicRelevance: this.assessGeographicRelevance(cvText),
            industryAlignment: this.assessIndustryAlignment(cvText, jobDescription)
        };

        return insights;
    }

    calculateKeywordDensity(cvText) {
        const words = cvText.toLowerCase().split(/\s+/);
        const totalWords = words.length;
        
        let professionalKeywordCount = 0;
        let technicalKeywordCount = 0;

        this.professionalKeywords.forEach(keyword => {
            const regex = new RegExp(keyword, 'gi');
            const matches = cvText.match(regex);
            if (matches) professionalKeywordCount += matches.length;
        });

        this.technicalKeywords.forEach(keyword => {
            const regex = new RegExp(keyword, 'gi');
            const matches = cvText.match(regex);
            if (matches) technicalKeywordCount += matches.length;
        });

        return {
            professional: Math.round((professionalKeywordCount / totalWords) * 100 * 100) / 100,
            technical: Math.round((technicalKeywordCount / totalWords) * 100 * 100) / 100,
            total: Math.round(((professionalKeywordCount + technicalKeywordCount) / totalWords) * 100 * 100) / 100
        };
    }

    calculateReadabilityScore(cvText) {
        const sentences = cvText.split(/[.!?]+/).filter(s => s.trim().length > 0);
        const words = cvText.split(/\s+/);
        const avgWordsPerSentence = words.length / sentences.length;
        
        // Score bas√© sur la complexit√© des phrases (adapt√© au fran√ßais)
        let score = 100;
        if (avgWordsPerSentence > 25) score -= 20;
        else if (avgWordsPerSentence > 20) score -= 10;
        else if (avgWordsPerSentence > 15) score -= 5;

        // P√©nalit√© pour les phrases trop courtes (manque de d√©tail)
        if (avgWordsPerSentence < 8) score -= 15;

        return Math.max(score, 0);
    }

    assessProfessionalLevel(cvText) {
        const seniorKeywords = ['senior', 'lead', 'chef', 'directeur', 'manager', 'responsable', 'expert'];
        const managementKeywords = ['√©quipe', 'management', 'encadrement', 'supervision', 'direction'];
        const experienceYears = this.extractExperienceYears(cvText);

        let level = 'junior';
        let score = 0;

        seniorKeywords.forEach(keyword => {
            if (new RegExp(keyword, 'i').test(cvText)) score += 2;
        });

        managementKeywords.forEach(keyword => {
            if (new RegExp(keyword, 'i').test(cvText)) score += 1;
        });

        if (experienceYears >= 8 || score >= 6) level = 'senior';
        else if (experienceYears >= 4 || score >= 3) level = 'confirm√©';
        else if (experienceYears >= 2 || score >= 1) level = 'junior+';

        return {
            level,
            score,
            estimatedYears: experienceYears
        };
    }

    extractExperienceYears(cvText) {
        // Recherche de patterns d'ann√©es d'exp√©rience
        const yearPatterns = [
            /(\d+)\s*ans?\s*(d'|de\s+)?exp√©rience/gi,
            /exp√©rience\s*de\s*(\d+)\s*ans?/gi,
            /(\d+)\s*ann√©es?\s*(d'|de\s+)?exp√©rience/gi
        ];

        for (let pattern of yearPatterns) {
            const matches = cvText.match(pattern);
            if (matches) {
                const numbers = matches[0].match(/\d+/);
                if (numbers) return parseInt(numbers[0]);
            }
        }

        // Estimation bas√©e sur les dates
        const years = this.extractYearsFromDates(cvText);
        if (years.length >= 2) {
            return Math.max(...years) - Math.min(...years);
        }

        return 0;
    }

    extractYearsFromDates(cvText) {
        const yearPattern = /\b(20\d{2}|19\d{2})\b/g;
        const matches = cvText.match(yearPattern);
        return matches ? matches.map(year => parseInt(year)) : [];
    }

    assessGeographicRelevance(cvText) {
        const frenchCities = [
            'paris', 'lyon', 'marseille', 'toulouse', 'nice', 'nantes', 'montpellier',
            'strasbourg', 'bordeaux', 'lille', 'rennes', 'reims', 'toulon', 'grenoble'
        ];

        const frenchRegions = [
            '√Æle-de-france', 'auvergne-rh√¥ne-alpes', 'nouvelle-aquitaine', 'occitanie',
            'hauts-de-france', 'grand est', 'provence-alpes-c√¥te d\'azur', 'pays de la loire'
        ];

        let relevanceScore = 0;
        let location = 'non sp√©cifi√©e';

        frenchCities.forEach(city => {
            if (new RegExp(city, 'i').test(cvText)) {
                relevanceScore += 10;
                location = city;
            }
        });

        frenchRegions.forEach(region => {
            if (new RegExp(region, 'i').test(cvText)) {
                relevanceScore += 5;
            }
        });

        if (new RegExp('france', 'i').test(cvText)) {
            relevanceScore += 5;
        }

        return {
            score: Math.min(relevanceScore, 100),
            location,
            isRelevant: relevanceScore > 0
        };
    }

    assessIndustryAlignment(cvText, jobDescription) {
        let bestMatch = { sector: 'g√©n√©raliste', score: 0, keywords: [] };

        Object.entries(this.sectorKeywords).forEach(([sector, keywords]) => {
            let sectorScore = 0;
            const matchedKeywords = [];

            keywords.forEach(keyword => {
                const cvMatches = (cvText.match(new RegExp(keyword, 'gi')) || []).length;
                const jobMatches = jobDescription ? 
                    (jobDescription.match(new RegExp(keyword, 'gi')) || []).length : 0;

                if (cvMatches > 0) {
                    sectorScore += cvMatches * (jobMatches > 0 ? 2 : 1);
                    matchedKeywords.push(keyword);
                }
            });

            if (sectorScore > bestMatch.score) {
                bestMatch = { sector, score: sectorScore, keywords: matchedKeywords };
            }
        });

        return bestMatch;
    }

    analyzeSector(cvText) {
        const sectorAnalysis = this.assessIndustryAlignment(cvText, '');
        
        return {
            identifiedSector: sectorAnalysis.sector,
            confidence: Math.min((sectorAnalysis.score / 10) * 100, 100),
            relevantKeywords: sectorAnalysis.keywords,
            recommendations: this.getSectorSpecificRecommendations(sectorAnalysis.sector)
        };
    }

    getSectorSpecificRecommendations(sector) {
        const recommendations = {
            'tech': [
                'Mentionnez vos contributions open source',
                'D√©taillez vos projets techniques avec les technologies utilis√©es',
                'Quantifiez les performances et optimisations r√©alis√©es'
            ],
            'marketing': [
                'Quantifiez vos r√©sultats (ROI, taux de conversion, croissance)',
                'Mentionnez vos certifications (Google, Facebook, HubSpot)',
                'D√©taillez vos campagnes les plus r√©ussies'
            ],
            'finance': [
                'Pr√©cisez les montants et budgets g√©r√©s',
                'Mentionnez vos certifications professionnelles',
                'D√©taillez votre expertise r√©glementaire'
            ],
            'rh': [
                'Quantifiez vos recrutements et formations',
                'Mentionnez votre connaissance du droit social',
                'D√©taillez vos projets de transformation RH'
            ],
            'commercial': [
                'Quantifiez vos r√©sultats de vente (CA, objectifs)',
                'Mentionnez la taille de votre portefeuille client',
                'D√©taillez vos techniques de n√©gociation'
            ]
        };

        return recommendations[sector] || [
            'Quantifiez vos r√©alisations avec des chiffres pr√©cis',
            'Utilisez des verbes d\'action forts',
            'Adaptez votre vocabulaire au secteur vis√©'
        ];
    }

    getFrenchSpecificTips(cvText) {
        const tips = [];

        // V√©rification de la photo (d√©conseill√©e en France sauf exceptions)
        if (/photo|image/i.test(cvText)) {
            tips.push({
                type: 'warning',
                title: 'Photo sur le CV',
                description: 'En France, la photo n\'est g√©n√©ralement pas recommand√©e sauf pour certains m√©tiers sp√©cifiques (commercial, accueil).'
            });
        }

        // Longueur du CV
        const wordCount = cvText.split(/\s+/).length;
        if (wordCount > 800) {
            tips.push({
                type: 'info',
                title: 'Longueur du CV',
                description: 'En France, un CV d\'une page est souvent pr√©f√©r√©, sauf pour les profils tr√®s exp√©riment√©s.'
            });
        }

        // Informations personnelles
        if (!/√¢ge|n√©|naissance/i.test(cvText)) {
            tips.push({
                type: 'success',
                title: 'Informations personnelles',
                description: 'Bien ! Vous n\'avez pas mentionn√© votre √¢ge, ce qui est recommand√© pour √©viter les discriminations.'
            });
        }

        return tips;
    }

    adaptRecommendationsForFrance(recommendations, cvText) {
        // Ajouter des recommandations sp√©cifiques au march√© fran√ßais
        const frenchRecommendations = [...recommendations];

        // V√©rifier la pr√©sence de certifications fran√ßaises
        if (!/cqp|rncp|titre professionnel/i.test(cvText)) {
            frenchRecommendations.push({
                priority: 'low',
                title: 'Certifications fran√ßaises',
                description: 'Consid√©rez l\'ajout de certifications reconnues en France (RNCP, CQP, titres professionnels) pour renforcer votre profil.',
                impact: 'Meilleure reconnaissance de vos qualifications par les recruteurs fran√ßais'
            });
        }

        // Recommandation sur les soft skills √† la fran√ßaise
        frenchRecommendations.push({
            priority: 'low',
            title: 'Adaptation culturelle',
            description: 'Mettez en avant des qualit√©s appr√©ci√©es en France : rigueur, esprit d\'analyse, capacit√© d\'adaptation et sens du collectif.',
            impact: 'Meilleure ad√©quation avec les attentes culturelles des entreprises fran√ßaises'
        });

        return frenchRecommendations;
    }
}